name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # 프로젝트 경로 찾기
          if [ -d "/home/ubuntu/LET_AI_SERVER" ]; then
            PROJECT_DIR="/home/ubuntu/LET_AI_SERVER"
          elif [ -d "/home/ubuntu/let-ai" ]; then
            PROJECT_DIR="/home/ubuntu/let-ai"
          elif [ -d "~/LET_AI_SERVER" ]; then
            PROJECT_DIR="~/LET_AI_SERVER"
          else
            echo "❌ 프로젝트 디렉토리를 찾을 수 없습니다."
            echo "현재 디렉토리 내용:"
            ls -la
            echo "홈 디렉토리 내용:"
            ls -la ~
            exit 1
          fi
          
          cd $PROJECT_DIR
          echo "📍 현재 디렉토리: $(pwd)"
          
          # Git 원격 URL을 HTTPS로 변경 (SSH 키 없이도 public repo 접근 가능)
          echo "🔧 현재 원격 URL: $(git remote get-url origin)"
          git remote set-url origin https://github.com/${{ github.repository }}.git
          echo "✅ HTTPS URL로 변경: $(git remote get-url origin)"
          
          # 최신 코드 가져오기
          git pull origin main || {
            echo "❌ Git pull 실패. Repository 상태를 확인하세요."
            exit 1
          }
          
          # docker-compose.yml 위치 확인
          if [ -f "docker-compose.yml" ]; then
            echo "✅ docker-compose.yml 찾음"
          elif [ -f "ai_exercise_service/docker-compose.yml" ]; then
            echo "❌ docker-compose.yml이 루트에 없습니다. 파일 구조를 확인하세요."
            ls -la
            exit 1
          else
            echo "❌ docker-compose.yml을 찾을 수 없습니다."
            ls -la
            exit 1
          fi
          
          # .env 파일 확인
          if [ ! -f .env ]; then
            echo "❌ .env 파일이 없습니다. EC2에 직접 생성해주세요."
            exit 1
          fi
          
          # Docker Compose로 서비스 재시작
          docker-compose down --remove-orphans
          docker-compose build --no-cache
          docker-compose up -d
          
          # 서비스 상태 확인
          sleep 15
          if curl -f http://127.0.0.1:8001/health; then
            echo "✅ 배포 성공!"
          else
            echo "❌ 배포 실패 - 로그 확인"
            docker-compose logs --tail=50
            exit 1
          fi